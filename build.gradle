plugins {
    id "java"
    id "idea"
    id "application"
    id("org.springframework.boot") version "2.5.6"
    id("io.spring.dependency-management") version "1.0.11.RELEASE"
    id("com.google.cloud.tools.jib") version "3.1.4"
    id("org.flywaydb.flyway") version "8.0.3"
}

group = 'by.vk'
version = '1.0.0'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

application {
    mainClass.set("by.vk.datagen.DatagenApplication")
    applicationName = "datagen-service"
}

repositories {
    mavenCentral()
}

configurations {
    implementation {
        exclude module: "spring-boot-starter-tomcat"
    }
}

dependencies {
    implementation("org.springframework:spring-context-indexer")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.springframework.boot:spring-boot-starter-validation")
    implementation("org.springframework.boot:spring-boot-starter-undertow")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("com.vladmihalcea:hibernate-types-52:2.14.0")
    runtimeOnly("org.postgresql:postgresql")
    implementation("org.flywaydb:flyway-core")
    compileOnly("org.projectlombok:lombok")
    implementation("ch.qos.logback.contrib:logback-json-classic:0.1.5")
    implementation("ch.qos.logback.contrib:logback-jackson:0.1.5")
    implementation("com.github.javafaker:javafaker:1.0.2")
}

test {
    useJUnitPlatform()
}

jib {
    from {
        image = "openjdk:17.0.1-oraclelinux8"
    }
    to {
        image = "datagen"
        auth {
            artifactory_username = "username"
            artifactory_password = "password"
        }
        tags = ["$version", "latest"]
    }
    container {
        mainClass = "by.vk.datagen.DatagenApplication"
        ports = ['8080']
        labels.set(Map.of("app-name", "${application.applicationName}", "service-version", "$version"))
        creationTime = "USE_CURRENT_TIMESTAMP"
    }
}